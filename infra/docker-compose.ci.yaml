version: '3.8'

name: todolist

services:

  front:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - "80:80"
    restart: always
    depends_on:
      api:
        condition: service_started
    labels:
      "docker_compose_diagram.icon": "nginx"
      "docker_compose_diagram.cluster": "Frontend"

  db:
    image: postgres:12.4-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    restart: always
    ports:
    - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 5s
      retries: 4
    labels:
      "docker_compose_diagram.cluster": "Backend"
      "docker_compose_diagram.description": "PostgreSQL Database"

  api:
    image: dalbezh/todolist-api:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      - DEBUG
      - SECRET_KEY
      - LANGUAGE_CODE
      - DATABASE_URL
      - SOCIAL_AUTH_VK_OAUTH2_KEY
      - SOCIAL_AUTH_VK_OAUTH2_SECRET
      - BOT_TOKEN
    command: python manage.py runserver 0.0.0.0:8000
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      migration:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    labels:
      "docker_compose_diagram.icon": "django"
      "docker_compose_diagram.cluster": "Backend"
      "docker_compose_diagram.description": "provides REST API"

  bot:
    image: dalbezh/todolist-api:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      - DEBUG
      - SECRET_KEY
      - LANGUAGE_CODE
      - DATABASE_URL
      - SOCIAL_AUTH_VK_OAUTH2_KEY
      - SOCIAL_AUTH_VK_OAUTH2_SECRET
      - BOT_TOKEN
    command: python manage.py runbot
    restart: always
    depends_on:
      api:
        condition: service_started
    labels:
      "docker_compose_diagram.icon": "django"
      "docker_compose_diagram.cluster": "Backend"
      "docker_compose_diagram.description": "Telegram Bot"

  migration:
    image: dalbezh/todolist-api:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      - SECRET_KEY
      - LANGUAGE_CODE
      - DATABASE_URL
      - SOCIAL_AUTH_VK_OAUTH2_KEY
      - SOCIAL_AUTH_VK_OAUTH2_SECRET
      - BOT_TOKEN
    command: sh -c "python3 manage.py migrate"
    depends_on:
      db:
        condition: service_healthy
    labels:
      "docker_compose_diagram.icon": "django"
      "docker_compose_diagram.cluster": "Backend"

volumes:
  postgres_data: