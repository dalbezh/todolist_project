name: Build and deploy workflow

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code on ${{ runner.os }}
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t dalbezh/todolist-api:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push dalbezh/todolist-api:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: print directory content
        run: ls -al
      - name: render configs
        run: |
          mkdir deploy
          cat infra/docker-compose.ci.yaml | envsubst > deploy/docker-compose_todolist.yml
      - name: print compose file
        run: cat deploy/docker-compose_todolist.yml
      - name: copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_USER_KEY }}
          port: ${{ secrets.HOST_PORT }}
          source: "deploy/docker-compose_todolist.yml"
          target: "deploy"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@master
        env:
          DEBUG: True
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_USER_KEY }}
          port: ${{ secrets.HOST_PORT }}
          envs: DEBUG,SECRET_KEY,POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_DB,DATABASE_URL
          script: |
            export DEBUG=$DEBUG
            export SECRET_KEY=$SECRET_KEY
            export POSTGRES_USER=$POSTGRES_USER
            export POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            export POSTGRES_DB=$POSTGRES_DB
            export DATABASE_URL=$DATABASE_URL
            cd deploy
            echo ${{ secrets.HOST_USER_PASSWORD }} | sudo -S docker compose -f docker-compose_todolist.yml up -d